version: 2.1

executors:
  gradle_docker:
    docker:
      - image: cimg/openjdk:11.0

commands:
  gradle:
    description: 'Run the provided gradle command'
    parameters:
      args:
        type: string
      when:
        default: "on_success"
        type: enum
        enum: ["on_fail", "on_success", "always"]
    steps:
      - run:
          name: << parameters.args >>
          command: ./gradlew << parameters.args >> --info --max-workers=2 -Dorg.gradle.jvmargs=-Xmx2g -Dorg.gradle.console=plain --continue
          when: << parameters.when >>
  setup_build_environment:
    description: 'Checkout, restore the cache, and setup docker'
    steps:
      - checkout
      - run:
          name: Generate cache key
          command: find . -type f -name "*.gradle*" -o -name "gradle-wrapper*" -exec shasum {} + | sort > /tmp/checksum.txt && cat /tmp/checksum.txt
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "/tmp/checksum.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - setup_remote_docker
  save_populated_cache:
    description: "Save the gradle binary to the cache so it doesn't have to redownload"
    steps:
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "/tmp/checksum.txt" }}

jobs:
  build:
    executor: gradle_docker
    steps:
      - setup_build_environment
      - gradle:
          args: dockerBuildImages
      - save_populated_cache
  publish:
    executor: gradle_docker
    steps:
      - setup_build_environment
      - gradle:
          args: dockerPushImages

workflows:
  version: 2
  build-and-publish:
    jobs:
      - build
      - publish:
          context: hypertrace-publishing
          requires:
            - build
          filters:
            branches:
              only:
                - main
